swagger: "2.0"
info:
  version: "0"
  title: WebWallet API
  description: A digital wallet specification for the Web.
host: localhost
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
  
paths:
  /:
    x-swagger-router-controller: endpoints
    parameters:
      - name: accept-language
        in: header
        type: string
        description: Preferred response languages.
    get:
      description: Returns a set of instructions for getting started with the API.
      tags: ["basepath"]
      operationId: basepath.get
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WelcomeBasepath"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /currency:
    x-swagger-router-controller: endpoints
    parameters:
      - name: authorization
        in: header
        type: string
        description: OAuth bearer token.
        required: true  
    post:
      description: Creates a new currency.
      tags: ["currency"]
      operationId: currency.new.post
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewAddressGET"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /address:
    x-swagger-router-controller: endpoints
    parameters:
      - name: authorization
        in: header
        type: string
        description: OAuth bearer token.
        required: true
      - name: accept-language
        in: header
        type: string
        description: Preferred response languages.
    get:
      description: Generates and returns a new wallet address.
      tags: ["address"]
      operationId: wallet.address.new.get
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewAddressGET"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      parameters:
        - name: addressDetails
          in: body
          description: A transaction request document.
          required: true
          schema:
            $ref: "#/definitions/NewWalletAddressRequest"
      description: Generates and stores a new wallet address.
      tags: ["address"]
      operationId: wallet.address.new.post
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewAddressPOST"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /address/{walletAddress}:
    x-swagger-router-controller: endpoints
    parameters:
      - name: walletAddress
        in: path
        description: A webwallet address
        required: true
        type: string
      - name: authorization
        in: header
        type: string
        description: OAuth bearer token.
        required: true
      - name: accept-language
        in: header
        type: string
        description: Preferred response languages.
    get:
      description: Retrieves the representation of an existing wallet address.
      tags: ["address"]
      operationId: wallet.address.get
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WalletAddressGET"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /address/{walletAddress}/balance:
    x-swagger-router-controller: endpoints
    parameters:
      - name: walletAddress
        in: path
        description: A webwallet address
        required: true
        type: string
      - name: authorization
        in: header
        type: string
        description: OAuth bearer token.
        required: true
      - name: accept-language
        in: header
        type: string
        description: Preferred response languages.
    get:
      description: Retrieves the balance of a wallet address.
      tags: ["balance"]
      operationId: wallet.address.balance.get
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WalletAddressBalanceGET"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /address/{walletAddress}/transactions:
    x-swagger-router-controller: endpoints
    parameters:
      - name: walletAddress
        in: path
        description: A webwallet address.
        required: true
        type: string
      - name: authorization
        in: header
        type: string
        description: OAuth bearer token.
        required: true
      - name: accept-language
        in: header
        type: string
        description: Preferred response languages.
    post:
      parameters:
        - name: transaction
          in: body
          description: A transaction request document.
          required: true
          schema:
            $ref: "#/definitions/TransactionRequest"
      description: Sends a transaction request to a wallet address.
      tags: ["transactions"]
      operationId: wallet.address.transactions.post
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WalletAddressTransactionPOST"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /oauth/authorize:
    x-swagger-router-controller: endpoints
    parameters:
      - name: client_ID
        in: query
        description: The ID of an API client.
        required: true
        type: string
      - name: redirect_uri
        in: query
        description: The URI to which the user agent should be redirected after the user grants or rejects authorization.
        required: true
        type: string
      - name: response_type
        in: query
        description: Specifies if a code or a token should be returned.
        required: true
        type: string
      - name: scope
        in: query
        description: The scope of the requested authorization.
        type: string
    get:
      description: Handles the authorization of thirty-party applications.
      tags: ["oauth"]
      operationId: oauth.authorize.get
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OAuthAuthorizeGET"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /oauth/token:
    x-swagger-router-controller: endpoints
    parameters:
      - name: client_ID
        in: formData
        description: The ID of an API client.
        required: true
        type: string
      - name: client_secret
        in: formData
        description: The secret of an API client.
        required: true
        type: string
      - name: grant_type
        in: formData
        description: The type of OAuth flow.
        required: true
        type: string
      - name: code
        in: formData
        description: The code that will be exchanged for an access token (authorization_code flow only).
        type: string
      - name: redirect_uri
        in: formData
        description: The URI to which the user agent should be redirected after the user grants or rejects authorization (authorization_code flow only).
        type: string
      - name: refresh_token
        in: formData
        description: An OAuth refresh token (refresh_token flow only).
        type: string
      - name: username
        in: formData
        description: The username of a first-party app (password flow only).
        type: string
      - name: password
        in: formData
        description: The password of a first-party app (password flow only).
        type: string
    post:
      description: Handles access token generation.
      tags: ["oauth"]
      operationId: oauth.token.post
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OAuthTokenPOST"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    

###-------------------------------------------###
###--------------- DEFINITIONS ---------------###           
definitions:
  TransactionRequest:
    type: object
    # format: JWS
    required:
      - header
      - payload
      - signature
    properties:
      header:
        $ref: "#/definitions/TransactionRequest-Header"
      payload:
        $ref: "#/definitions/TransactionRequest-Payload"
      signature:
        $ref: "#/definitions/TransactionRequest-Signature"
  TransactionRequest-Header:
    type: object
    properties:
      alg:
        type: string
        example: ed25519
  TransactionRequest-Payload:
    type: object
    required:
      - source
      - destination
      - amount
      - currency
      - timestamp
    properties:
      source:
        $ref: "#/definitions/TransactionRequest-Source"
      destination: 
        $ref: "#/definitions/TransactionRequest-Destination"
      amount:
        $ref: "#/definitions/TransactionRequest-Amount"
      currency:
        $ref: "#/definitions/TransactionRequest-Currency"
      timestamp:
        $ref: "#/definitions/TransactionRequest-Timestamp"
  TransactionRequest-Signature:
    type: string
  TransactionRequest-Source:
    type: string
    # format: base58check
    description: A source wallet address.
    example: wi1iWJdeXJQQcfi6xB6iewpkgkWJWw2SYw
  TransactionRequest-Destination:
    type: string
    # format: base58check
    description: A destination wallet address.
    example: wQfghayiSxCWfetuZ6ZfBEuxLEDUfnMzQc
  TransactionRequest-Amount:
    type: number
    description: The amount of the transaction.
    example: 100
  TransactionRequest-Currency:
    type: string
    # format: currencyCode:identifier
    description: The currency of the transaction.
    example: IOU:ABC123
  TransactionRequest-Timestamp:
    type: string
    # format: ISO 8601
    description: The creation or scheduled time of the transaction request document.
    example: "2015-03-14T09:26:53.000Z"

  NewWalletAddressRequest:
    type: object
    description: Optional properties for wallet address generation.
    properties:
      currency:
        $ref: "#/definitions/Currency"
      limits:
        $ref: "#/definitions/WalletAddressLimits"
  
  WalletAddressLimits:
    type: object
    description: The balance limits of a wallet address.
    properties:
      lower:
        type: number
      upper:
        type: number
    
  WelcomeBasepath:
    required:
      - properties
      - entities
      - actions
      - links
    properties:
      properties:
        $ref: "#/definitions/Properties-Basepath"
      entities:
        $ref: "#/definitions/REST-SubEntities"
      actions:
        $ref: "#/definitions/REST-Actions"
      links:
        $ref: "#/definitions/REST-Links"
# GET /address
  NewAddressGET:
    required:
      - properties
      - entities
      - actions
      - links
    properties:
      properties:
        $ref: "#/definitions/Properties-NewAddressGET"
      entities:
        $ref: "#/definitions/Entities-NewAddressGET"
      actions:
        $ref: "#/definitions/REST-Actions"
      links:
        $ref: "#/definitions/REST-Links"
  NewAddressPOST:
    required:
      - properties
      - entities
      - actions
      - links
    properties:
      properties:
        $ref: "#/definitions/Properties-NewAddressPOST"
      entities:
        $ref: "#/definitions/Entities-NewAddressPOST"
      actions:
        $ref: "#/definitions/REST-Actions"
      links:
        $ref: "#/definitions/REST-Links"
  WalletAddressGET:
    required:
      - type
      - address
    properties:
      type:
        type: string
      address:
        type: string
  WalletAddressBalanceGET:
    required:
      - properties
      - entities
      - actions
      - links
    properties:
      properties:
        $ref: "#/definitions/Properties-WalletAddressBalanceGET"
      entities:
        $ref: "#/definitions/Entities-NewAddressPOST"
      actions:
        $ref: "#/definitions/REST-Actions"
      links:
        $ref: "#/definitions/REST-Links"
  WalletAddressTransactionPOST:
    required:
      - properties
      - entities
      - actions
      - links
    properties:
      properties:
        $ref: "#/definitions/Properties-WalletAddressTransactionPOST"
      entities:
        $ref: "#/definitions/Entities-WalletAddressTransactionPOST"
      actions:
        $ref: "#/definitions/REST-Actions"
      links:
        $ref: "#/definitions/REST-Links"
  
  OAuthAuthorizeGET:
    description: An HTTP document that prompts the user to authorize a third-party application and redirects the user agent to the supplied URI with the authorization response.
  
  OAuthTokenPOST:
    required:
      - access_token
      - expires_in
      - refresh_token
    properties:
      access_token:
        $ref: "#/definitions/OAuthAccessToken"
      expires_in:
        $ref: "#/definitions/OAuthExpiresIn"
      refresh_token:
        $ref: "#/definitions/OAuthRefreshToken"
      token_type:
        $ref: "#/definitions/OAuthTokenType"
  
  CryptoKeyPair:
    required:
      - scheme
      - public
    properties:
      scheme:
        $ref: "#/definitions/EncryptionScheme"
      public: 
        $ref: "#/definitions/PublicCryptoKey"
      private: 
        $ref: "#/definitions/PrivateCryptoKey"
  EncryptionScheme:
    type: string
    description: The code name of an encryption scheme.
    example: secp256k1
  PublicCryptoKey:
    type: string
    format: hex
    description: A public cryptographic key in hexadecimal format.
  PrivateCryptoKey:
    type: string
    format: hex
    description: A private cryptographic key in hexadecimal format.
  
###----- BODY SCHEMAS -----###
#  NewAddressPOST-Body:
#    type: object
#    properties:
#      currency:
#        type: string
###----- CONTENTS OF 'PROPERTIES' FOR EACH ENDPOINT -----###  
  Properties-Basepath:
    type: object
    description: The properties of the basepath document
    required:
      - name
      - version
      - description
    properties:
      name:
        type: string
        description: The name of the API.
      version:
        $ref: "#/definitions/api-version"
      description:
        $ref: "#/definitions/description"
      tips:
        type: array
        description: Tips for getting started with the API.
        items:
          type: string
  Properties-NewAddressGET:
    type: object
    description: The properties of the new wallet address.
    required:
      - address
      - type
    properties:
      address:
        $ref: "#/definitions/WalletAddress"
      type:
        type: string
        description: The type of address.
  Properties-NewAddressPOST:
    type: object
    description: The properties of the new wallet address.
    required:
      - address
      - type
    properties:
      address:
        $ref: "#/definitions/WalletAddress"
      type:
        type: string
        description: The type of address.
  Properties-WalletAddressBalanceGET:
    type: object
    description: The balance of a wallet address.
    required:
      - address
      - balance
      - currency
    properties:
      address:
        $ref: "#/definitions/WalletAddress"
      balance:
        type: number
      currency:
        $ref: "#/definitions/Currency"
  Properties-WalletAddressTransactionPOST:
    type: object
    description: The reply to a transaction request.
    required:
      - success
      - transaction
    properties:
      success:
        type: boolean
      transaction:
        type: string
    

###----- ENTITIES ATTRIBUTES FOR EACH ENDPOINT -----###         
  Entities-NewAddressGET:
    type: array
    description: A collection of sub-entities of a wallet address.
    items:
      $ref: "#/definitions/Entity-NewAddressGET"
  Entity-NewAddressGET:
    type: object
    description: Sub-entities of a wallet address.
    required:
      - keys
    properties:
      keys:
        $ref: "#/definitions/CryptoKeyPair"
  Entities-NewAddressPOST:
    type: array
    description: A collection of sub-entities of a wallet address.
    items:
      $ref: "#/definitions/Entity-NewAddressPOST"
  Entity-NewAddressPOST:
    type: object
    description: Sub-entities of a wallet address.
    required:
      - keys
    properties:
      keys:
        $ref: "#/definitions/CryptoKeyPair"
        
  Entities-WalletAddressTransactionPOST:
    type: array
    description: A collection of sub-entities of a transaction.
    items:
      type: object
    
###----- REST API RESPONSE COMPONENTS -----###

# "links" attribute      
  REST-Links:
    type: array
    description: A collection of navigational links.
    items:
      $ref: "#/definitions/REST-Link"
# "links" element
  REST-Link:
    type: object
    description: Represents a navigational transition to a related resource.
    required:
      - rel
      - href
    properties:
      rel:
        $ref: "#/definitions/rel"
      href:
        $ref: "#/definitions/href"
      
# "entities" attribute
  REST-SubEntities:
    type: array
    description: A collection of sub-entities.
    items:
      $ref: "#/definitions/REST-SubEntity"
# "entities" element
  REST-SubEntity:
    type: object
    description: An embedded link or representation of a resource that has properties, actions and other resources associated with it.
    required:
      - rel
      - href
    properties:
      rel:
        $ref: "#/definitions/rel"
      href:
        $ref: "#/definitions/href"
        
# "actions" attribute
  REST-Actions:
    type: array
    description: A collection of behaviors exposed by the resource.
    items:
      $ref: "#/definitions/REST-Action"
# "actions" element
  REST-Action:
    type: object
    description: Represents a behaviour exposed by the resource.
    required:
      - name
      - href
      - method
    properties:
      name:
        $ref: "#/definitions/name"
      href:
        $ref: "#/definitions/href"
      method:
        $ref: "#/definitions/method"
      fields:
        $ref: "#/definitions/fields"

# "rel" and "href" attributes
  rel:
    type: string
    description: Describes the relationship between the link and the entity listing it.
    example: self,parent,previous,next
  href:
    type: string
    description: The URI of the resource, collection or action.
    example: https://example.com/path/to/a/resource
    
# "method" attribute
  method:
    type: string
    description: An HTTP method.
    example: GET,POST,PUT,DELETE
# "name" attribute
  name:
    type: string
    description: The name of the resource, collection or action.
# "description" attribute
  description:
    type: string
    description: The description of the resource, collection or action.
# "api-version" attribute
  api-version:
    type: string
    description: The version of the queried API.
# "fields" attribute
  fields:
    type: array
    description: A collection of request fields.
    items:
      $ref: "#/definitions/field"
  field:
    type: object
    description: A request field.
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the field.
      type:
        type: string
        description: The data type of the field.
      value:
        description: The default value of the field.
# "address" attribute
  WalletAddress:
    type: string
    format: base58
    description: The hash of a public key in base58check encoding.
    example: wcvKsFjqCEutppnik5xV9PhvsN4n2FEunE
  Currency:
    type: string
    description: A currency code optionally followed by a circle identifier (separeted by a colon)
    example: IOU[:ABCDEFG]
  
  OAuthAccessToken:
    type: string
    format: Base64-url-encoded JWT (JSON Web Token)
    description: A token used to access an OAuth-secured API.
  OAuthExpiresIn:
    type: number
    format: seconds
    description: The number of seconds a token will be valid for.
    example: 3600
  OAuthRefreshToken:
    type: string
    format: Base64-url-encoded JWT (JSON Web Token)
    description: A token used to obtain a new access token after it expires.
  OAuthTokenType:
    type: string
    description: The type of an OAuth token.
    example: bearer
    
###---------- ERROR RESPONSES ----------###
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
