swagger: "2.0"
info:
  version: "0.0.1"
  title: WebWallet API
  description: A digital wallet specification for the Web.
host: localhost
basePath: /
schemes:
  - https
consumes:
  - application/json
  - application/x-www-form-urlencoded
produces:
  - application/json
  
paths:
  /address:
    x-swagger-router-controller: endpoints
    get:
      description: Generates and returns a new wallet address.
      tags: ["address"]
      operationId: wallet.address.new.get
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewAddressGET"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Generates and stores a new wallet address.
      tags: ["address"]
      operationId: wallet.address.new.post
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/NewAddressPOST"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /address/{walletAddress}:
    x-swagger-router-controller: endpoints
    parameters:
      - name: walletAddress
        in: path
        description: A webwallet address
        required: true
        type: string
    get:
      description: Retrieves the representation of an existing wallet address.
      tags: ["address"]
      operationId: wallet.address.get
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/WalletAddressGET"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
definitions:
  NewAddressGET:
    required:
      - address
      - keys
    properties:
      address: 
        $ref: "#/definitions/WalletAddress"
      keys:
        $ref: "#/definitions/CryptoKeyPair"
  NewAddressPOST:
    required:
      - address
      - keys
    properties:
      address:
        $ref: "#/definitions/WalletAddress"
      keys:
        $ref: "#/definitions/CryptoKeyPair"
  WalletAddressGET:
    required:
      - type
      - address
    properties:
      type:
        type: string
      address:
        type: string
  
  CryptoKeyPair:
    required:
      - scheme
      - public
      - private
    properties:
      scheme:
        $ref: "#/definitions/EncryptionScheme"
      public: 
        $ref: "#/definitions/PublicCryptoKey"
      private: 
        $ref: "#/definitions/PrivateCryptoKey"
  EncryptionScheme:
    type: string
    description: The code name of an encryption scheme.
    example: secp256k1
  PublicCryptoKey:
    type: string
    format: hex
    description: A public cryptographic key in hexadecimal format.
  PrivateCryptoKey:
    type: string
    format: hex
    description: A private cryptographic key in hexadecimal format.
  WalletAddress:
    type: string
    format: base58
    description: The hash of a public key in base58check encoding.
    example: wcvKsFjqCEutppnik5xV9PhvsN4n2FEunE
    
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
